---
title: "Generación de catálogo de clima"
author: Centro Internacional de Agricultura Trópical grupo de Big-Data AEPS <br/>
  Hugo Dorado
date: "April 26, 2018"
output:
  html_document: default
---

## Introducción

El procesamiento de datos climáticos es una parte fundamental en el análisis de Agricultura Especifica por Sitio, debido a que el clima desempeña un rol importante en la explicación de la variación del rendimiento. En la práctica normalmente en la colecta de información, tenemos sitios donde se cultiva, que son georreferenciados y al adicionar una fecha de siembra y cosecha obtenemos una unidad observacional que llamaremos ciclo de cultivo `crop cycle`, el cual en algunas ocasiones también lo hemos llamado por el nombre de evento de cultivo `cropping event`.  Por otro lado, tenemos otra fuente de información que son las estaciones meteorológicas, estos datos pueden venir con información diversa respecto a fechas de disponibilidad de información, también no siempre contienen todas las variables climáticas, por ejemplo tiende mucho a faltar variables tales como la radiación solar y humedad relativa. 

La vinculación de la información de los ciclos de cultivo con las estaciones meteorológicas se hace por medio de una secuencia de pasos que involucran evaluar disponibilidad de información, distancias espaciales y diferencias de altura. Para ello se requiere por un lado tener la información procesada y cruda de las estaciones meteorológicas y por otro lado un catálogo de estaciones meteorológicas que reporte disponibilidad de información y fechas de inicio y finalización.

Para ello, hemos desarrollado el script `Stations_Catalog.R`, el cual permite organizar la información climática en una estructura que facilita su consulta y genera insumos que serán utilizados en la asignación de eventos de cosecha a estaciones meteorológicas. Para poder ejecutarlo efectivamente es necesario haber realizado el control de calidad y estimación de datos faltantes que se puede encontrar en el proceso descrito en [Control de datos de clima](https://github.com/j-river1/Weather_Data_Code). Este manual se compone por una sesión de preparación de datos donde se organiza la estructura de los datos de entrada, luego la extracción de altitud de los registros georefenciados y posteriormente la generación y estructuración del manual de clima. A modo de ejemplo reproducible, se generaron aleatoriamente 230 ciclos de cultivo (georeferenciación y fechas de siembra) en el estado de Chiapas México y se procesó 32 estaciones meteorológicas dentro del mismo estado, provenientes [INEGI](http://www.inegi.org.mx/).


## Preparación de datos

Los comandos deben ser ejecutados utilizando el proyecto ` Vinculacion_clima_lotes_comerciales.Rproj` que está contenido dentro de la carpeta. La ubicación de los archivos para lectura y escritura se hará utilizando el paquete `here`. En el proceso manipularemos información geoespacial para extraer los datos de altura, por tanto necesitaremos la librería `raster`. También se hará uso de funciones de estructuración de matrices para lo cual se utilizará la librería `reshape`. 

```{r message=FALSE, warning=FALSE}
rm(list=ls())

library(here)
library(raster)
library(reshape2)
```

### Datos de entrada

#### Estaciones meteorológicas

Para procesar los datos de las estaciones meteorológicas se requiere crear un archivo de csv, como se muestra continuación, lo ideal es conservar exactamente los mismos nombres de los encabezados, donde la  primera columna `Station_Name` debe indicar el nombre o código de la estación meteorológica y este deber ser único por estación, seguido por la latitud (`Latitude`)  y  longitud (`Longitude`) en escala de decimales, posteriormente la fecha de comienzo  (`Ini_Date`) y final (`End_Date`) de datos de la estación, y por último cada variable (`Variable`)  contenida dentro de la estación separada en cada fila.                                                                                                                                                                                                                                                                                                     
```{r }
# Reading datasets

stations  <- read.csv(here::here('BASIC_FILES','estaciones_variables_fechas.csv'))
head(stations)
```

#### Ciclos de cultivo

En cuanto a georreferenciación y fechas, el formato es similar al de estaciones meteorológicas, el identificador de cada cultivo debe ser nombrado por una variable llamada `FID`                                                                                                                                                                                                                                                                                                

```{r }
crop_cycles     <- read.csv(here::here('BASIC_FILES','cultivos_georefenciados.csv'))
head(crop_cycles)
```

Tanto para las estaciones meteorológicas como para ciclos de cultivo, se debe haber echo una revisión de que las fechas de inicio no sean mayores a las de finalización, que los ciclos de siembra tengan una duración razonable y que no hayan datos perdidos o faltantes, se recomienda no utilizar ni acentos ni letras que  puedan generar inconvenientes con la codificación.

#### Datos de altura

Como parte del procesamiento, es necesario estimar la altura de las estaciones y los lotes, dado que esto hace parte del criterio para evaluar que tan similar puede ser el clima de dos localidades, para ello es necesario contar con un archivo en formato de raster `chiapas_srtm` de la localidad que se esté analizando, en este caso Chiapas.

```{r }
elevation <- raster(here::here('BASIC_FILES','chiapas_srtm'))
plot(elevation)
```

### Ajustar formato de fecha

Posterior a la lectura de datos, es necesario especificar el formato de fecha a través de la función `as.Date` e indicando en el campo de fecha, cual es la ubicación del mes, día y año.

```{r }
# Date formate

stations$Ini_Date    <- as.Date(stations$Ini_Date,'%m/%d/%Y')

stations$End_Date    <- as.Date(stations$End_Date,'%m/%d/%Y')

crop_cycles$Ini_Date <- as.Date(crop_cycles$Ini_Date,'%m/%d/%Y')

crop_cycles$End_Date <- as.Date(crop_cycles$End_Date,'%m/%d/%Y')
```

## Extraer altitúd de las estaciones y los lotes

En este paso se realiza el cálculo del valor de altura de cada evento de cosecha y estación meteorológica utilizando los datos de coordenadas y el objeto raster que contiene el mapa de altura de Chiapas, cada altura es agregada a la base de datos,

```{r }
# Elevation estimation

stations$Elevation <- extract(elevation ,stations[c('Longitude','Latitude')])

head(stations)

crop_cycles$Elevation    <- extract(elevation ,crop_cycles[c('Longitude','Latitude')])

head(crop_cycles)
```

Como parte del procesamiento, se descartan filas en las cuales la altura no ha sido posible calcularse y han quedado con valores de `NA`, debido a problemas con el raster, o que han quedado por fuera del área de cobertura del mismo.

```{r }
# Remove stations or crop_cycles with missing values in elevation

stations <- stations[!is.na(stations$Elevation),] 

crop_cycles   <- crop_cycles[!is.na(crop_cycles$Elevation),]    
```


## Generar catálogo de clima

Para generar el catálogo de clima, se estructuran los datos en una forma longitudinal de manera que la disponibilidad de cada variable se pueda observar en una sola fila en la base de datos.

```{r }
# Generation of the variables catalog 

station_groups_Date <- reshape(stations,v.names=c("Ini_Date","End_Date"),
                               idvar = c("Station_Name"),
                               timevar= "Variable",direction = "wide",sep = "_")

head(station_groups_Date)
```


#### Disponibilidad de datos por cada variable

También agregamos un indicador binario siendo `1` disponibilidad de datos y `0` ausencia de datos de dicha estación (fila) en dicha variable (columna).

```{r message=FALSE, warning=FALSE}
# Weather variables availability inspection

stations$availability <- 1

stations_availability  <- dcast(stations, Station_Name   ~  Variable,sum)
 
Stations_catalog <- merge(station_groups_Date,stations_availability,by='Station_Name',all=T,sort = F)

head(Stations_catalog)
```

#### Estructurar el ordén de las variables

Agregamos una variable que indique la fecha inicial más temprana y la fecha final más tardía, finalmente redistribuimos las posiciones de las variables con el fin de tener una mejor organización. De la misma manera, en la base de datos de eventos de cosecha, reagrupamos el ordén de variables.

```{r }
# Sorting the variables

nams_catalog <- names(Stations_catalog)

Stations_catalog$Min_Date <- apply(Stations_catalog[grep('Ini',nams_catalog)],1,min,na.rm=T)

Stations_catalog$Max_Date <- apply(Stations_catalog[grep('End',nams_catalog)],1,min,na.rm=T)

head(Stations_catalog)

Stations_catalog <- Stations_catalog[,c(1:4,15:19,5:14,20:21)]

head(Stations_catalog)

crop_cycles <- crop_cycles[,c(1:3,6,4:5)]

head(crop_cycles)
```

## Almacenar resultados 

Finalmente almacenamos el catálogo de estaciones climáticas en un `csv` para una posterior consulta y también lo almacenamos junto al de ciclo de cosecha en un `RData`

```{r }
# Save outputs files

write.csv(Stations_catalog,here::here("RESULTS","Stations_catalog.csv"),row.names=F)

save(Stations_catalog,crop_cycles,file = here::here("RESULTS","Catalogs.RData"))
```

(C\) *2018, Grupo Big Data y  Agricultura Específica por Sitio, Centro Internacional de Agricultura Trópical*
